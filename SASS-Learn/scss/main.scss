@import "test"; // To import another file

$color-primary: orange;
$color-secondary: gray; //glbal
$color-tertiary: royalblue;

$font-lg: 40px;
$font-md: 30px;
$font-sm: 20px;

.nav {
    // Lighten function to lighten color
    background-color: lighten($color-primary, 20%);
    // Aslo for Darken function, to make color darker
    // background-color: Darken($color-primary, 20%);

    // Transparentize to make background transparent
    //background-color: transparentize($color-primary, .6);

    // mix to mix color
    // We can aslo add third value e.g. background-color: mix(blue,green,10%);
    // Which means mix blue 10$
    //background-color: mix(blue,green);

    ul li {
        list-style: none;
    }

    a {
        text-decoration: none;
        font-size: $font-sm;
        color: $color-secondary;

        &:hover { //for hover, use & sign
            color: $color-tertiary;
        }
    }
}

// @mixin headingStyles($fontSize: 50px) { //default will be 50px
//     font-size: $fontSize;
//     color: $color-secondary;
//     text-align: center;
// }

// @mixin transition($param...){ //if multi value inside parameter, use 3 dots after parameter(...)
//     transition:$param;
// }


//% for placeholder
//Placeholder is more benefit when you extend from class you make (the class is not orginally created from html code)
%heading { //TO let another selector extend this property
    color: $color-primary;
    font-size: $font-lg;
    background-color: $color-secondary;
    text-align: center;
}

// @function fontSize($size:25px) { //TO create a function
//     @return $size * 2; // TO return result
// }

// .banner 
h1{
    //$color-secondary: red; //!global this is for make local to global
    // font-size: $font-lg;
    // color: $color-secondary;
    // text-align: center;
    // @include headingStyles($font-lg);

    @extend %heading; //Placeholder

    &:hover {
        background-color: green;
    }

}

.footer h3{
    // font-size: $font-md;
    // color: $color-secondary;
    // text-align: center;
    // @include headingStyles($font-md);
    // @include transition(color .5s, background-color 1s);

    // &:hover {
    //     color: $color-tertiary;
    //     background-color: $color-primary;
    // }

    @extend h1; //To extend hover of banner above, .banner selector should be deleted
}

// .banner p {
//     font-size: fontSize($font-sm); //Will be 40 px because of the function I create
// }

// .footer p{
//     font-size: fontSize(); // Will be 50 px, because function was declared as 25 as default, and 
//     // 25 should times 2.
// }


// Numbers
.numbers {
    font-weight: 400;
    line-height: 1.5;
    font-size: 20px; // rem, em, %
}


//Strings
.strings {
    font-family: 'Helvetica', Arial, sans-serif;
    font-weight: bold;
    font-style: italic;
}

// Colors
.colors {
    color: red;
    background-color: #ff0000;
    border-color: rgb(255, 0, 0);
    outline-color: hsl(0, 100%, 50%);
}

//Lists
.list{
    margin: 10px 15px 5px 20px;
    font-family: 'Raleway','Dosis','Lato';
    border: 1px solid red;
}

//Maps
$colors: (
    1: red,
    2: gray,
    3: blue
);

// h1 {
//     color: map-get($colors, 1);
//     background-color: map-get($colors, 2);
// }

// Boolean
// true , false

// null
// Should write as Null

$b: "border";
$c: "color";

h2 {
    box-sizing: #{$b}-box;
    #{$b}: 1px solid blue;
    #{$c}: red;
    background-#{$c}: green;
}


// // for - Loop
// $colors: (
//     1: Red,
//     2: green,
//     3: blue,
//     4: orange
// );

// // If we use 1 through 4, we have 4 values 1-4
// // If we use 1 to 4, we have 3 values 1-3, 4 is not included
// @for $i from 1 through 4 {
//     .paragraph-#{$i} {
//         background-color: map-get($colors, $i);
//     }
// }

// Each loop

$colors: red green blue orange;

@each $color in $colors {
    .paragraph-#{$color} {
        background-color: $color;
    }
}

// h1 {
//     @if(false) {
//         color: red;
//     }
// }

@mixin headingSize($size) {
    @if ($size == large) {
        font-size: 45px;
    }@else if ($size == medium){
        font-size: 30px;
    }@else {
        font-size: 15px;
    }
}

h1 {
    @include headingSize(medium);
}